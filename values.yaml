namespace: midpoint
nameOverride: ''
fullnameOverride: ''
imagePullSecrets: []

secret:
  name: midpoint-db-secret
  stringData:
    POSTGRES_PASSWORD: db.secret.pw.007

postgres:
  enabled: true
  name: midpoint-postgres
  image:
    repository: postgres
    tag: 16-alpine
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5432
  env:
    - name: POSTGRES_USER
      value: midpoint
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: midpoint-db-secret
          key: POSTGRES_PASSWORD
    - name: POSTGRES_INITDB_ARGS
      value: --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8
  persistence:
    enabled: true
    size: 5Gi
    accessModes:
      - ReadWriteOnce

app:
  enabled: true
  name: midpoint
  replicaCount: 1
  image:
    repository: evolveum/midpoint
    tag: 4.8.4-alpine
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  env:
    - name: MP_SET_midpoint_repository_type
      value: native
    - name: MP_SET_midpoint_repository_database
      value: postgresql
    - name: MP_SET_midpoint_repository_jdbcUsername
      value: midpoint
    - name: MP_SET_midpoint_repository_jdbcPassword
      valueFrom:
        secretKeyRef:
          name: midpoint-db-secret
          key: POSTGRES_PASSWORD
    - name: MP_SET_midpoint_repository_jdbcUrl
      value: jdbc:postgresql://midpoint-postgres:5432/midpoint
    - name: MP_UNSET_midpoint_repository_hibernateHbm2ddl
      value: '1'
    - name: MP_NO_ENV_COMPAT
      value: '1'
  initContainers:
    - name: wait-for-db
      image: postgres:16-alpine
      command:
        - sh
        - -c
        - |
          until pg_isready -h midpoint-postgres -p 5432 -U midpoint; do
            echo 'waiting for Postgres...'
            sleep 2
          done
    - name: init-native-repo
      image: evolveum/midpoint:4.8.4-alpine
      env:
        - name: MP_SET_midpoint_repository_type
          value: native
        - name: MP_SET_midpoint_repository_database
          value: postgresql
        - name: MP_SET_midpoint_repository_jdbcUrl
          value: jdbc:postgresql://midpoint-postgres:5432/midpoint
        - name: MP_SET_midpoint_repository_jdbcUsername
          value: midpoint
        - name: MP_SET_midpoint_repository_jdbcPassword
          valueFrom:
            secretKeyRef:
              name: midpoint-db-secret
              key: POSTGRES_PASSWORD
        - name: MP_INIT_CFG
          value: /opt/midpoint/var
        - name: MP_NO_ENV_COMPAT
          value: '1'
      command:
        - sh
        - -c
        - |
          set -e
          cd /opt/midpoint
          bin/midpoint.sh init-native
          echo " - - - - repository check - - - - "
          bin/ninja.sh -B info >/dev/null 2>/tmp/ninja.log || true
          if grep -q "ERROR" /tmp/ninja.log 2>/dev/null; then
            bin/ninja.sh run-sql --create --mode REPOSITORY
            bin/ninja.sh run-sql --create --mode AUDIT
          else
            echo "Repository init is not needed..."
          fi
      volumeMounts:
        - name: midpoint-home
          mountPath: /opt/midpoint/var
  persistence:
    enabled: true
    name: midpoint-home
    size: 1Gi
    accessModes:
      - ReadWriteOnce

ingress:
  enabled: true
  className: nginx
  hosts:
    - host: midpoint.local
      paths:
        - path: /midpoint
          pathType: Prefix
          servicePort: 8080
  tls: []

resources: {}
tolerations: []
affinity: {}
